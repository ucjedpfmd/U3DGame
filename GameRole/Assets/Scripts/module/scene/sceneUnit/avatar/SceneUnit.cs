//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18052
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------
namespace module.scene.sceneUnit.avatar{
    using System;
    using UnityEngine;
    using module.scene.utils;
using module.scene.tile;
	public class SceneUnit
    {
        public double id;
        public int sceneType;
		public bool isInit;
        protected int _status;

		protected GameObject myObj;
        protected IAvatar avatar;
        protected IAvatarBehaviour behaviour;
        protected MeshCollider collider;
        public SceneUnit()
        {
			myObj = new GameObject("SceneUnit");
        }

		protected virtual void init(){
			
		}

        public int status {
            get { return _status; }
			set {_status = value;}
		}

        public virtual void play(string act, int dir = -1)
        {
            avatar.body.animation.Play();
        }

        public virtual void reset(object value = null)
        {

        }

        protected Pt _index = new Pt();
        public Pt index
        {		
			get {
                _index = TileUitls.getIndexWithPt(this.x, this.y, _index);
                return _index;
                }
		}

        public int pos
        {
            get {
                return PosUtil.getPos((int)index.x, (int)index.y, curDir, (int)index.z); 
                }
        }

        public virtual void resetPos(Vector3 pos)
        {
			pos.y = 1;
			myObj.transform.position = pos;
        }

        public virtual float x
        {
            get {return myObj.transform.position.x;}
        }
        public virtual float y
        {
            get { return myObj.transform.position.y; }
        }

        public virtual void resetSkin(int skinID, int sex)
        {

        }

        public int curDir
        {
            get { return MoveMathUtil.getDir(myObj.transform.rotation.y); }
        }

		public void setParent(GameObject parent){
			myObj.transform.parent = parent.transform;
		}

        public virtual void remove() {
            GameObject.Destroy(myObj);
        }
    }

}
