//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18052
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------
namespace module.scene.sceneUnit.avatar{
    using System;
    using UnityEngine;
    using proto;
    public class Monster : Animal
    {
        private p_map_monster _pvo;
        public int delayAttackKey;
        public Monster()
        {
			init();
        }

		override protected void init(){
            myObj.name = "Monster";
			avatar = new RichAvatar();
			avatar.setParent(myObj);
			sceneType = SceneUnitType.MONSTER_TYPE;
		}

        override public void reset(object value = null)
        {
            _pvo = value as p_map_monster;
            //myObj.name = "Monster" + _pvo.monster_id;
            initBody();
        }

        private void initBody()
        {
			avatar.resetSkin(1,0);
            //body.AddComponent<CapsuleCollider>();
            //CapsuleCollider cap = body.GetComponent<CapsuleCollider>();
            //cap.radius = 10;
            if (isInit == false)
            {
                myObj.AddComponent<CharacterController>();
                collider = myObj.AddComponent<MeshCollider>();
                LoopManager.addToFrame(this, loop);
                isInit = true;
            }       
        }

        public void runToPoint(Vector3 v3) {
            point = v3;
            myObj.transform.LookAt(new Vector3(point.x, myObj.transform.position.y, point.z));
            SetGameAct(AvatarUtil.ACT_WALK);
        }
    }
}
