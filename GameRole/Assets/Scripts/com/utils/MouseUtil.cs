//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18052
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using UnityEngine;
public class MouseUtil : MonoBehaviour
{
	private Dictionary<string, List<function>> observers = new Dictionary<string, List<function>>(); //KEY是消息名，值是数组，放函数


	public MouseUtil ()
	{
	}

	void Update ()
	{
		int btnKey = InputConstant.MOUSE_CLICK_LEFT;
		if(Input.GetMouseButtonDown(btnKey))
		{
			execute(btnKey);
		}
		btnKey = InputConstant.MOUSE_CLICK_RIGHT;
		if(Input.GetMouseButtonDown(btnKey))
		{
			execute(btnKey);
		} 
		btnKey = InputConstant.MOUSE_CLICK_MIDDLE;
		if(Input.GetMouseButtonDown(btnKey))
		{
			execute(btnKey);
		}
	}

	public void addEventListener(string type,function listener) {
		List<function> funcs;
		if (observers.ContainsKey(type) == false)
		{
			funcs = new List<function>();
			observers[type] = funcs;
		}
		else
		{
			funcs = observers[type];
		}
		if (funcs.IndexOf(listener) == -1)
		{
			funcs.Add(listener);
		}
	}

	public void removeEventListener(string type,function listener) {
		List<function> funcs = observers[type];
		if (funcs != null)
		{
			int index = funcs.IndexOf(listener);
			if (index != -1)
			{
				funcs.RemoveAt(index);
			}
		}
	}

	private void execute(int btnKey) {
		string type="";
		switch(btnKey){
		case InputConstant.MOUSE_CLICK_LEFT:
			type = InputConstant.EVENT_MOUSE_DOWN_LEFT;
				break;
		case InputConstant.MOUSE_CLICK_RIGHT:
			type = InputConstant.EVENT_MOUSE_DOWN_RIGHT;
				break;
		case InputConstant.MOUSE_CLICK_MIDDLE:
			type = InputConstant.EVENT_MOUSE_DOWN_MIDDLE;
				break;
		default:
			break;
		}

		List<function> funcs;
		if (observers.ContainsKey(type) == false)
		{
			return;
		}
		funcs = observers[type];
		for (int i = 0; i < funcs.Count; i++)
		{
			function call = funcs.ElementAt(i);
			call(null);
		}
	}
}

